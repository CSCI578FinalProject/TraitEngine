10
-----CSCI578-----
-----CSCI578-----


    /**
     * Return the Connector through which this Request was received.
     */
    public Connector getConnector() {
        return (this.connector);
    }
-----CSCI578-----



    /**
     * Return the "use cookies for session ids" flag.
     */
    public boolean getCookies();
-----CSCI578-----


    
    /**
     * Gets the name to use for session cookies. Overrides any setting that
     * may be specified by the application.
     * 
     * @return  The value of the default session cookie name or null if not
     *          specified
     */
    public String getSessionCookieName();
-----CSCI578-----



    /**
     * Return the "empty session path" flag.
     */
    public boolean getEmptySessionPath() {

        return (this.emptySessionPath);

    }
-----CSCI578-----


    
    /**
     * Gets the path to use for session cookies. Overrides any setting that
     * may be specified by the application.
     * 
     * @return  The value of the default session cookie path or null if not
     *          specified
     */
    public String getSessionCookiePath();
-----CSCI578-----



    /**
     * Return the URL encoded context path, using UTF-8.
     */
    public String getEncodedPath();
-----CSCI578-----

    
    
    /**
     * Gets the domain to use for session cookies. Overrides any setting that
     * may be specified by the application.
     * 
     * @return  The value of the default session cookie domain or null if not
     *          specified
     */
    public String getSessionCookieDomain();
-----CSCI578-----


    
    /**
     * Gets the value of the use HttpOnly cookies for session cookies flag.
     * 
     * @return <code>true</code> if the HttpOnly flag should be set on session
     *         cookies
     */
    public boolean getUseHttpOnly();
-----CSCI578-----

    /**
     * Add the specified Cookie to those that will be included with
     * this Response.
     *
     * @param cookie Cookie to be added
     */
    public void addCookieInternal(final Cookie cookie) {
        addCookieInternal(cookie, false);
    }


    /**
     * Add the specified Cookie to those that will be included with
     * this Response.
     *
     * @param cookie    Cookie to be added
     * @param httpOnly  Should the httpOnly falg be set on this cookie
     */
    public void addCookieInternal(final Cookie cookie, final boolean httpOnly) {

        if (isCommitted())
            return;

        final StringBuffer sb = generateCookieString(cookie, httpOnly);
        //if we reached here, no exception, cookie is valid
        // the header name is Set-Cookie for both "old" and v.1 ( RFC2109 )
        // RFC2965 is not supported by browsers and the Servlet spec
        // asks for 2109.
        addHeader("Set-Cookie", sb.toString());

        cookies.add(cookie);
    }
