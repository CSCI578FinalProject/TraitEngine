5
-----CSCI578-----


    public synchronized int getNameIndex() {
        if (nameIndex == 0) {
            nameIndex = nextNameIndex();
        }
        return nameIndex;
    }
-----CSCI578-----



    /**
     * An utility method, used to implement getName() in subclasses.
     */
    protected String createName(String prefix, InetAddress address, int port) {
        StringBuilder name = new StringBuilder(prefix);
        name.append('-');
        if (address != null) {
            String strAddr = address.toString();
            if (strAddr.startsWith("/")) {
                strAddr = strAddr.substring(1);
            }
            name.append(URLEncoder.encode(strAddr)).append('-');
        }
        if (port == 0) {
            // Auto binding is in use. Check if port is known
            name.append("auto-");
            name.append(getNameIndex());
            port = getLocalPort();
            if (port != -1) {
                name.append('-');
                name.append(port);
            }
        } else {
            name.append(port);
        }
        return name.toString();
    }
-----CSCI578-----


    public static int nextNameIndex() {
        return nameCounter.incrementAndGet();
    }
-----CSCI578-----


    public synchronized int getNameIndex() {
        if (nameIndex == 0) {
            nameIndex = AbstractProtocol.nextNameIndex();
        }

        return nameIndex;
    }
-----CSCI578-----


    public synchronized int getNameIndex() {
        if (nameIndex == 0) {
            nameIndex = AbstractProtocol.nextNameIndex();
        }

        return nameIndex;
    }
