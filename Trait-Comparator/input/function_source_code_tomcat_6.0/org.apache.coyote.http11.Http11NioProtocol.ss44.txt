10
-----CSCI578-----



    /** Start the protocol
     */
    public void init() throws Exception {
        ep.setName(getName());
        ep.setHandler(cHandler);

        //todo, determine if we even need these
        ep.getSocketProperties().setRxBufSize(Math.max(ep.getSocketProperties().getRxBufSize(),getMaxHttpHeaderSize()));
        ep.getSocketProperties().setTxBufSize(Math.max(ep.getSocketProperties().getTxBufSize(),getMaxHttpHeaderSize()));

        try {
            ep.init();
            sslImplementation = new JSSEImplementation();
        } catch (Exception ex) {
            log.error(sm.getString("http11protocol.endpoint.initerror"), ex);
            throw ex;
        }
        if(log.isInfoEnabled())
            log.info(sm.getString("http11protocol.init", getName()));

    }
-----CSCI578-----


    public void setTxBufSize(int txBufSize) {
        this.txBufSize = txBufSize;
    }
-----CSCI578-----


    public void setRxBufSize(int rxBufSize) {
        this.rxBufSize = rxBufSize;
    }
-----CSCI578-----


    public int getMaxHttpHeaderSize() {
        return maxHttpHeaderSize;
    }
-----CSCI578-----

    public void setName(String name) { this.name = name; }
-----CSCI578-----

    public void setHandler(Handler handler ) { this.handler = handler; }
-----CSCI578-----


    public int getRxBufSize() {
        return rxBufSize;
    }
-----CSCI578-----


    public int getTxBufSize() {
        return txBufSize;
    }
-----CSCI578-----


    public int getWriteBufSize() {
        return socketProperties.getTxBufSize();
    }
-----CSCI578-----


    public int getReadBufSize() {
        return socketProperties.getRxBufSize();
    }
