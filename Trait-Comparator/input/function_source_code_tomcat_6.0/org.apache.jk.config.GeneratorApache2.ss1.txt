6
-----CSCI578-----

    
    private void generateMimeMapping( PrintWriter out ) {
        Node webN=wxml.getWebXmlNode();
        for( Node mapN=WebXml2Jk.getChild( webN, "mime-mapping" );
             mapN != null; mapN = WebXml2Jk.getNext( mapN ) ) {
            String ext=WebXml2Jk.getChildContent( mapN, "extension" );
            String type=WebXml2Jk.getChildContent( mapN, "mime-type" );

            out.println("  AddType " + type + " " + ext );
        }
        

    }
-----CSCI578-----

    
    /** Return the top level node
     */
    public Node getWebXmlNode() {
        return webN;
    }
-----CSCI578-----


    public void generateStart() throws IOException {
        File base=wxml.getJkDir();
        File outF=new File(base, "jk2.conf");
        out=new PrintWriter( new FileWriter( outF ));

        out.println("# Must be included in a virtual host context for " + vhost );

        out.println("Alias " + cpath + " \"" + wxml.docBase + "\"");
        out.println("<Directory \"" + wxml.docBase + "\" >");
        out.println("  Options Indexes FollowSymLinks");
        generateMimeMapping( out );
        generateWelcomeFiles( out);

        // If we use this instead of extension mapping for jsp we can avoid most
        // jsp security problems.
        out.println("  AddHandler jakarta-servlet2 .jsp");
        out.println("</Directory>");
        out.println();
        
        out.println("<Location \"" + cpath + "/WEB-INF\" >");
        out.println("  AllowOverride None");
        out.println("  Deny from all");
        out.println("</Location>");
        out.println();
        out.println("<Location \"" + cpath + "/META-INF\" >");
        out.println("  AllowOverride None");
        out.println("  Deny from all");
        out.println("</Location>");
        out.println();
    }
-----CSCI578-----


    public File getJkDir() {
        return jkDir;
    }
-----CSCI578-----


    public void generateStart( ) throws IOException  {
        File base=wxml.getJkDir();
        File outF=new File(base, "jk.conf");
        out=new PrintWriter( new FileWriter( outF ));
        
        out.println("# This must be included in the virtual host section for " + vhost );
    }
-----CSCI578-----


    public void generateStart( ) throws IOException {
        File base=wxml.getJkDir();
        File outF=new File(base, "jk2map.properties");
        out=new PrintWriter( new FileWriter( outF ));

        out.println("# Autogenerated from web.xml" );
    }
