3
-----CSCI578-----


    public Enumeration getThreads(){
        return threads.keys();
    }
-----CSCI578-----

  
    /**
     * Sets the thread priority for current
     * and future threads in this pool.
     *
     * @param threadPriority The new priority
     * @throws IllegalArgumentException If the specified
     *  priority is less than Thread.MIN_PRIORITY or
     *  more than Thread.MAX_PRIORITY 
     */
    public synchronized void setThreadPriority(int threadPriority) {
        if(log.isDebugEnabled())
            log.debug(getClass().getName() +
                      ": setPriority(" + threadPriority + "): here.");

      if (threadPriority < Thread.MIN_PRIORITY) {
        throw new IllegalArgumentException("new priority < MIN_PRIORITY");
      } else if (threadPriority > Thread.MAX_PRIORITY) {
        throw new IllegalArgumentException("new priority > MAX_PRIORITY");
      }

      // Set for future threads
      this.threadPriority = threadPriority;

      Enumeration currentThreads = getThreads();
      Thread t = null;
      while(currentThreads.hasMoreElements()) {
        t = (Thread) currentThreads.nextElement();
        t.setPriority(threadPriority);
      } 
    }
-----CSCI578-----


    public void setThreadPriority(int threadPriority) {
      tp.setThreadPriority(threadPriority);
    }
