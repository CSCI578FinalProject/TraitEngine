6
-----CSCI578-----
-----CSCI578-----
-----CSCI578-----
-----CSCI578-----



    @Override
    public int read() throws IOException {
        checkNonBlockingRead();

        if (SecurityUtil.isPackageProtectionEnabled()){

            try{
                Integer result =
                    AccessController.doPrivileged(
                        new PrivilegedExceptionAction<Integer>(){

                            @Override
                            public Integer run() throws IOException{
                                Integer integer = Integer.valueOf(ib.readByte());
                                return integer;
                            }

                });
                return result.intValue();
            } catch(PrivilegedActionException pae){
                Exception e = pae.getException();
                if (e instanceof IOException){
                    throw (IOException)e;
                } else {
                    throw new RuntimeException(e.getMessage(), e);
                }
            }
        } else {
            return ib.readByte();
        }
    }


    @Override
    public int read(final byte[] b) throws IOException {
        checkNonBlockingRead();

        if (SecurityUtil.isPackageProtectionEnabled()){
            try{
                Integer result =
                    AccessController.doPrivileged(
                        new PrivilegedExceptionAction<Integer>(){

                            @Override
                            public Integer run() throws IOException{
                                Integer integer =
                                    Integer.valueOf(ib.read(b, 0, b.length));
                                return integer;
                            }

                });
                return result.intValue();
            } catch(PrivilegedActionException pae){
                Exception e = pae.getException();
                if (e instanceof IOException){
                    throw (IOException)e;
                } else {
                    throw new RuntimeException(e.getMessage() ,e);
                }
            }
        } else {
            return ib.read(b, 0, b.length);
         }
    }



    @Override
    public int read(final byte[] b, final int off, final int len)
        throws IOException {
        checkNonBlockingRead();

        if (SecurityUtil.isPackageProtectionEnabled()){
            try{
                Integer result =
                    AccessController.doPrivileged(
                        new PrivilegedExceptionAction<Integer>(){

                            @Override
                            public Integer run() throws IOException{
                                Integer integer =
                                    Integer.valueOf(ib.read(b, off, len));
                                return integer;
                            }

                });
                return result.intValue();
            } catch(PrivilegedActionException pae){
                Exception e = pae.getException();
                if (e instanceof IOException){
                    throw (IOException)e;
                } else {
                    throw new RuntimeException(e.getMessage(), e);
                }
            }
        } else {
            return ib.read(b, off, len);
        }
    }
-----CSCI578-----



    public int readByte() throws IOException {
        if (closed) {
            throw new IOException(sm.getString("inputBuffer.streamClosed"));
        }

        return bb.substract();
    }
-----CSCI578-----
