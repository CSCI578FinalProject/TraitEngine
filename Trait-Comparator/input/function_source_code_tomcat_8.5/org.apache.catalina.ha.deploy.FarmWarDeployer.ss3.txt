13
-----CSCI578-----
-----CSCI578-----


    /**
     * Call watcher to check for deploy changes
     *
     * @see org.apache.catalina.ha.ClusterDeployer#backgroundProcess()
     */
    @Override
    public void backgroundProcess() {
        if (started) {
            if (watchEnabled) {
                count = (count + 1) % processDeployFrequency;
                if (count == 0) {
                    watcher.check();
                }
            }
            removeInvalidFileFactories();
        }

    }
-----CSCI578-----

    public void fileModified(File f);
-----CSCI578-----
-----CSCI578-----

    public void fileRemoved(File f);
-----CSCI578-----
-----CSCI578-----
-----CSCI578-----


    /**
     * add cluster war to the watcher state
     * @param warfile The WAR to add
     */
    protected void addWarInfo(File warfile) {
        WarInfo info = currentStatus.get(warfile.getAbsolutePath());
        if (info == null) {
            info = new WarInfo(warfile);
            info.setLastState(-1); //assume file is non existent
            currentStatus.put(warfile.getAbsolutePath(), info);
        }
    }
-----CSCI578-----


    /*--Logic---------------------------------------------------*/

    /**
     * check for modification and send notification to listener
     */
    public void check() {
        if (log.isDebugEnabled())
            log.debug(sm.getString("warWatcher.checkingWars", watchDir));
        File[] list = watchDir.listFiles(new WarFilter());
        if (list == null) {
            log.warn(sm.getString("warWatcher.cantListWatchDir",
                                  watchDir));

            list = new File[0];
        }
        //first make sure all the files are listed in our current status
        for (int i = 0; i < list.length; i++) {
            if(!list[i].exists())
                log.warn(sm.getString("warWatcher.listedFileDoesNotExist",
                                      list[i], watchDir));

            addWarInfo(list[i]);
        }

        // Check all the status codes and update the FarmDeployer
        for (Iterator<Map.Entry<String,WarInfo>> i =
                currentStatus.entrySet().iterator(); i.hasNext();) {
            Map.Entry<String,WarInfo> entry = i.next();
            WarInfo info = entry.getValue();
            if(log.isTraceEnabled())
                log.trace(sm.getString("warWatcher.checkingWar",
                                       info.getWar()));
            int check = info.check();
            if (check == 1) {
                listener.fileModified(info.getWar());
            } else if (check == -1) {
                listener.fileRemoved(info.getWar());
                //no need to keep in memory
                i.remove();
            }
            if(log.isTraceEnabled())
                log.trace(sm.getString("warWatcher.checkWarResult",
                                       Integer.valueOf(check),
                                       info.getWar()));
        }

    }
-----CSCI578-----
-----CSCI578-----
-----CSCI578-----
-----CSCI578-----
