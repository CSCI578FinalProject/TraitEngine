4
-----CSCI578-----


    /**
     * Return the filter definition for the specified filter name, if any;
     * otherwise return <code>null</code>.
     *
     * @param name Filter name to look up
     * @return a string representation of the filter definition
     * @throws MBeanException propagated from the managed resource access
     */
    public String findFilterDef(String name) throws MBeanException {

        Context context;
        try {
            context = (Context)getManagedResource();
        } catch (InstanceNotFoundException e) {
            throw new MBeanException(e);
        } catch (RuntimeOperationsException e) {
            throw new MBeanException(e);
        } catch (InvalidTargetObjectTypeException e) {
            throw new MBeanException(e);
        }

        FilterDef filterDef = context.findFilterDef(name);
        return filterDef.toString();

    }
-----CSCI578-----



    /**
     * @return the filter definition for the specified filter name, if any;
     * otherwise return <code>null</code>.
     *
     * @param filterName Filter name to look up
     */
    public FilterDef findFilterDef(String filterName);
-----CSCI578-----



    /**
     * Render a String representation of this object.
     */
    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder("FilterDef[");
        sb.append("filterName=");
        sb.append(this.filterName);
        sb.append(", filterClass=");
        sb.append(this.filterClass);
        sb.append("]");
        return (sb.toString());

    }
-----CSCI578-----


    /**
     * Return the set of defined filters for this Context.
     * @return a string array with a representation of all
     *  the filter definitions
     * @throws MBeanException propagated from the managed resource access
     */
    public String[] findFilterDefs() throws MBeanException {

        Context context;
        try {
            context = (Context)getManagedResource();
        } catch (InstanceNotFoundException e) {
            throw new MBeanException(e);
        } catch (RuntimeOperationsException e) {
            throw new MBeanException(e);
        } catch (InvalidTargetObjectTypeException e) {
            throw new MBeanException(e);
        }

        FilterDef[] filterDefs = context.findFilterDefs();
        String[] stringFilters = new String[filterDefs.length];
        for(int counter=0; counter < filterDefs.length; counter++){
            stringFilters[counter]=filterDefs[counter].toString();
        }

        return stringFilters;

    }
