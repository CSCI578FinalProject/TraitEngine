4
-----CSCI578-----


    @Override
    public void memberDisappeared(Member member) {
        if ( membership == null ) setupMembership();
        boolean shutdown = Arrays.equals(member.getCommand(),Member.SHUTDOWN_PAYLOAD);
        if (shutdown) {
            synchronized (membership) {
                if (!membership.contains(member)) return;
                membership.removeMember(member);
                removeSuspects.remove(member);
                if (member instanceof StaticMember) {
                    addSuspects.put(member, Long.valueOf(System.currentTimeMillis()));
                }
            }
            super.memberDisappeared(member);
        } else {
            boolean notify = false;
            if(log.isInfoEnabled())
                log.info(sm.getString("tcpFailureDetector.memberDisappeared.verify", member));
            synchronized (membership) {
                if (!membership.contains(member)) {
                    if(log.isInfoEnabled())
                        log.info(sm.getString("tcpFailureDetector.already.disappeared", member));
                    return;
                }
                //check to see if the member really is gone
                if (!memberAlive(member)) {
                    //not correct, we need to maintain the map
                    membership.removeMember(member);
                    removeSuspects.remove(member);
                    if (member instanceof StaticMember) {
                        addSuspects.put(member, Long.valueOf(System.currentTimeMillis()));
                    }
                    notify = true;
                } else {
                    //add the member as suspect
                    removeSuspects.put(member, Long.valueOf(System.currentTimeMillis()));
                }
            }
            if ( notify ) {
                if(log.isInfoEnabled())
                    log.info(sm.getString("tcpFailureDetector.member.disappeared", member));
                super.memberDisappeared(member);
            } else {
                if(log.isInfoEnabled())
                    log.info(sm.getString("tcpFailureDetector.still.alive", member));
            }
        }
    }
-----CSCI578-----


    public boolean contains(Member mbr) {
        return getMember(mbr) != null;
    }
-----CSCI578-----
 // 5 minutes

    @Override
    public void sendMessage(Member[] destination, ChannelMessage msg, InterceptorPayload payload) throws ChannelException {
        try {
            super.sendMessage(destination, msg, payload);
        }catch ( ChannelException cx ) {
            FaultyMember[] mbrs = cx.getFaultyMembers();
            for ( int i=0; i<mbrs.length; i++ ) {
                if ( mbrs[i].getCause()!=null &&
                     (!(mbrs[i].getCause() instanceof RemoteProcessException)) ) {//RemoteProcessException's are ok
                    this.memberDisappeared(mbrs[i].getMember());
                }//end if
            }//for
            throw cx;
        }
    }
-----CSCI578-----


    protected synchronized void setupMembership() {
        if ( membership == null ) {
            membership = new Membership(super.getLocalMember(true));
        }

    }
