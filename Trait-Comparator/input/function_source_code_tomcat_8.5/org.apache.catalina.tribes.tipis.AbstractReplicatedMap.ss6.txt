5
-----CSCI578-----


    @Override
    public void heartbeat() {
        try {
            ping(accessTimeout);
        }catch ( Exception x ) {
            log.error(sm.getString("abstractReplicatedMap.heartbeat.failed"),x);
        }
    }
-----CSCI578-----



    /**
     * Sends a ping out to all the members in the cluster, not just map members
     * that this map is alive.
     * @param timeout long
     * @throws ChannelException Send error
     */
    protected void ping(long timeout) throws ChannelException {
        //send out a map membership message, only wait for the first reply
        MapMessage msg = new MapMessage(this.mapContextName,
                                        MapMessage.MSG_INIT,
                                        false,
                                        null,
                                        null,
                                        null,
                                        channel.getLocalMember(false),
                                        null);
        if ( channel.getMembers().length > 0 ) {
            try {
                //send a ping, wait for all nodes to reply
                Response[] resp = rpcChannel.send(channel.getMembers(),
                                                  msg, RpcChannel.ALL_REPLY,
                                                  (channelSendOptions),
                                                  (int) accessTimeout);
                for (int i = 0; i < resp.length; i++) {
                    memberAlive(resp[i].getSource());
                }
            } catch (ChannelException ce) {
                // Handle known failed members
                FaultyMember[] faultyMembers = ce.getFaultyMembers();
                for (FaultyMember faultyMember : faultyMembers) {
                    memberDisappeared(faultyMember.getMember());
                }
                throw ce;
            }
        }
        //update our map of members, expire some if we didn't receive a ping back
        synchronized (mapMembers) {
            Member[] members = mapMembers.keySet().toArray(new Member[mapMembers.size()]);
            long now = System.currentTimeMillis();
            for (Member member : members) {
                long access = mapMembers.get(member).longValue();
                if ( (now - access) > timeout ) {
                    memberDisappeared(member);
                }
            }
        }//synch
    }
-----CSCI578-----


    /**
     * Returns true if there are any members in the group,
     * this call is the same as <code>getMembers().length &gt; 0</code>
     * @return boolean - true if there are any members automatically discovered
     */
    public boolean hasMembers() ;


    /**
     * Get all current group members
     * @return all members or empty array, never null
     */
    public Member[] getMembers() ;
-----CSCI578-----


    /**
     * We have received a member alive notification
     * @param member Member
     */
    protected void memberAlive(Member member) {
        mapMemberAdded(member);
        synchronized (mapMembers) {
            mapMembers.put(member, Long.valueOf(System.currentTimeMillis()));
        }
    }
-----CSCI578-----


    /**
     * Get all current cluster members
     * @return all members or empty array
     */
    @Override
    public Member[] getMembers() {
        return channel.getMembers();
    }
