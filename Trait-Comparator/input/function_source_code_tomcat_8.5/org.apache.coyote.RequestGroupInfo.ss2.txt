12
-----CSCI578-----


    public synchronized void setRequestCount(int requestCount) {
        deadRequestCount = requestCount;
        for (RequestInfo rp : processors) {
            rp.setRequestCount( requestCount );
        }
    }
-----CSCI578-----


    public void setRequestCount(int requestCount) {
        this.requestCount = requestCount;
    }
-----CSCI578-----


    public void setMaxTime(long maxTime) {
        this.maxTime = maxTime;
    }
-----CSCI578-----


    // Used to reset the times
    public synchronized void setMaxTime(long maxTime) {
        deadMaxTime = maxTime;
        for (RequestInfo rp : processors) {
            rp.setMaxTime(maxTime);
        }
    }
-----CSCI578-----


    public void setErrorCount(int errorCount) {
        this.errorCount = errorCount;
    }
-----CSCI578-----


    public synchronized void setErrorCount(int errorCount) {
        deadErrorCount = errorCount;
        for (RequestInfo rp : processors) {
            rp.setErrorCount( errorCount);
        }
    }
-----CSCI578-----


    public void setProcessingTime(long processingTime) {
        this.processingTime = processingTime;
    }
-----CSCI578-----


    public synchronized void setProcessingTime(long totalTime) {
        deadProcessingTime = totalTime;
        for (RequestInfo rp : processors) {
            rp.setProcessingTime( totalTime );
        }
    }
-----CSCI578-----


    public void setBytesSent(long bytesSent) {
        this.bytesSent = bytesSent;
    }
-----CSCI578-----


    public synchronized void setBytesSent(long bytesSent) {
        deadBytesSent = bytesSent;
        for (RequestInfo rp : processors) {
            rp.setBytesSent( bytesSent );
        }
    }
-----CSCI578-----


    public void setBytesReceived(long bytesReceived) {
        this.bytesReceived = bytesReceived;
    }
-----CSCI578-----


    public synchronized void setBytesReceived(long bytesReceived) {
        deadBytesReceived = bytesReceived;
        for (RequestInfo rp : processors) {
            rp.setBytesReceived( bytesReceived );
        }
    }
