4
-----CSCI578-----



    // --------------------------------------------------- OutputBuffer Methods

    @Override
    public int doWrite(ByteChunk chunk) throws IOException {

        if (!committed) {
            // Send the connector a request for commit. The connector should
            // then validate the headers, send them (using sendHeaders) and
            // set the filters accordingly.
            response.action(ActionCode.COMMIT, null);
        }

        if (lastActiveFilter == -1) {
            return outputStreamOutputBuffer.doWrite(chunk);
        } else {
            return activeFilters[lastActiveFilter].doWrite(chunk);
        }
    }
-----CSCI578-----
-----CSCI578-----


    /**
     * Write the given data to the response. The caller owns the chunks.
     *
     * @param chunk data to write
     *
     * @return The number of bytes written which may be less than available in
     *         the input chunk
     *
     * @throws IOException an underlying I/O error occurred
     */
    public int doWrite(ByteChunk chunk) throws IOException;
-----CSCI578-----



    /**
     * End the current request. It is acceptable to write extra bytes using
     * buffer.doWrite during the execution of this method.
     */
    @Override
    public long end()
        throws IOException {

        // Write end chunk
        buffer.doWrite(END_CHUNK);

        return 0;

    }
