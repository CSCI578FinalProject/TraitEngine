4
-----CSCI578-----
-----CSCI578-----


    /**
     * Clears cleared references from iterator's collection
     * @param iterator iterator over idle/allReferences
     */
    private void removeClearedReferences(Iterator<PooledSoftReference<T>> iterator) {
        PooledSoftReference<T> ref;
        while (iterator.hasNext()) {
            ref = iterator.next();
            if (ref.getReference() == null || ref.getReference().isEnqueued()) {
                iterator.remove();
            }
        }
    }
-----CSCI578-----


    /**
     * Returns the SoftReference wrapped by this object.
     *
     * @return underlying SoftReference
     */
    public synchronized SoftReference<T> getReference() {
        return reference;
    }
-----CSCI578-----


    /**
     * Returns an approximation not less than the of the number of idle
     * instances in the pool.
     *
     * @return estimated number of idle instances in the pool
     */
    @Override
    public synchronized int getNumIdle() {
        pruneClearedReferences();
        return idleReferences.size();
    }
