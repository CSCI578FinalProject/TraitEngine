4


    protected DelegatingConnection<?> getConnectionInternal() {
        return _conn;
    }


    @Override
    public Connection getConnection() throws SQLException {
        checkOpen();
        return getConnectionInternal(); // return the delegating connection that created this
    }


    protected void checkOpen() throws SQLException {
        if(isClosed()) {
            throw new SQLException
                (this.getClass().getName() + " with address: \"" +
                this.toString() + "\" is closed.");
        }
    }


    /**
     * Returns a String representation of this object.
     *
     * @return String
     */
    @Override
    public String toString() {
    return _stmt == null ? "NULL" : _stmt.toString();
    }
